clear()
clearOutput()
drawStage(ColorMaker.black)
class rocket {
    val a = -7
    val finalvel = Vector2D(0, a)
    var vel = Vector2D(0, 0)
    val cb = canvasBounds
    val x = cb.x + 467.5 - 25
    val y = cb.y + 334.5 + 200
    val lander = Picture.image("F:/Don't open/Ayush/aaa.png")
    val thruster = Picture.rectangle(20, 50)
    val gravity = Vector2D(0, -1)

    def draw(){ 
    
    lander.scale(0.15, 0.15)
    lander.draw()
    thruster.draw()
    lander.setPosition(x, y)
    thruster.setPosition(x + 15, y - 35)
    }

    def step() {
        vel = gravity + vel
        lander.translate(vel)
        thruster.translate(vel)
        thruster.invisible()
        if (isKeyPressed(Kc.VK_UP)) {
            vel = Vector2D(0, 3)
            vel = vel * 5
            thruster.visible()
        }
        if (lander.collidesWith(m.moon)) {
            thruster.invisible()
            if (l.vel.y<=a) {
        drawCenteredMessage("You Lose",red,50) ->trans(0, -40)
        setOutputBackground(red)
         }
            else{
               drawCenteredMessage("You Win!",green,50 )->trans(0, -40)
                setOutputBackground(green)
            }
            stopAnimation()
            activateEditor()

        }
        if (lander.collidesWith(stageTop)) {

            vel = bouncePicVectorOffStage(lander, vel)
            vel = vel * 5
            lander.translate(vel)
            thruster.translate(vel)

        }
    }
}

class Moon{
    val moon = Picture {
        left(180, 250)
    }

    moon.setFillColor(ColorMaker.dimGrey)
    moon.setPenColor(ColorMaker.dimGrey)
    moon.setPosition(l.cb.x + 350 * 2 + 25, l.cb.y)

    def draw() {
        moon.draw
    }
}



val l = new rocket 
val m = new Moon
m.draw
l.draw
animate {
l.step
}

activateCanvas()
